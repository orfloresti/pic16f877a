

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Aug 19 17:57:30 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0006                     _PORTBbits	set	6
   227  0019                     _TXREG	set	25
   228  001A                     _RCREG	set	26
   229  000C                     _PIR1bits	set	12
   230  0018                     _RCSTAbits	set	24
   231  0086                     _TRISB	set	134
   232  0099                     _SPBRG	set	153
   233  0098                     _TXSTAbits	set	152
   234  0087                     _TRISCbits	set	135
   235                           
   236                           	psect	cinit
   237  07FC                     start_initialization:	
   238                           ; #config settings
   239                           
   240  07FC                     __initialization:
   241  07FC                     end_of_initialization:	
   242                           ;End of C runtime variable initialization code
   243                           
   244  07FC                     __end_of__initialization:
   245  07FC  0183               	clrf	3
   246  07FD  120A  118A  2FC2   	ljmp	_main	;jump to C main() function
   247                           
   248                           	psect	cstackCOMMON
   249  0071                     __pcstackCOMMON:
   250  0071                     ?_UART_init:
   251  0071                     ??_UART_init:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0071                     ?_UART_read:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0071                     ??_UART_read:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0071                     ?_main:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0071                     ??_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 1 bytes @ 0x0
   268  0071                     	ds	3
   269  0074                     main@data_rx:
   270                           
   271                           ; 1 bytes @ 0x3
   272  0074                     	ds	1
   273                           
   274                           	psect	maintext
   275  07C2                     __pmaintext:	
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 13 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  data_rx         1    3[COMMON] unsigned char 
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : B00/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   295 ;;      Params:         0       0       0       0       0
   296 ;;      Locals:         1       0       0       0       0
   297 ;;      Temps:          3       0       0       0       0
   298 ;;      Totals:         4       0       0       0       0
   299 ;;Total ram usage:        4 bytes
   300 ;; Hardware stack levels required when called: 1
   301 ;; This function calls:
   302 ;;		_UART_init
   303 ;;		_UART_read
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309  07C2                     _main:	
   310                           ;psect for function _main
   311                           
   312  07C2                     l680:	
   313                           ;incstack = 0
   314                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   315                           
   316                           
   317                           ;main.c: 14:     char data_rx;;main.c: 16:     TRISB = 0b11111110;
   318  07C2  30FE               	movlw	254
   319  07C3  1683               	bsf	3,5	;RP0=1, select bank1
   320  07C4  1303               	bcf	3,6	;RP1=0, select bank1
   321  07C5  0086               	movwf	6	;volatile
   322  07C6                     l682:
   323                           
   324                           ;main.c: 17:     UART_init();
   325  07C6  120A  118A  27AF  120A  118A  	fcall	_UART_init
   326  07CB                     l684:
   327                           
   328                           ;main.c: 18:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   329  07CB  301A               	movlw	26
   330  07CC  00F3               	movwf	??_main+2
   331  07CD  305E               	movlw	94
   332  07CE  00F2               	movwf	??_main+1
   333  07CF  306E               	movlw	110
   334  07D0  00F1               	movwf	??_main
   335  07D1                     u47:
   336  07D1  0BF1               	decfsz	??_main,f
   337  07D2  2FD1               	goto	u47
   338  07D3  0BF2               	decfsz	??_main+1,f
   339  07D4  2FD1               	goto	u47
   340  07D5  0BF3               	decfsz	??_main+2,f
   341  07D6  2FD1               	goto	u47
   342  07D7  0000               	nop
   343  07D8                     l686:
   344                           
   345                           ;main.c: 22:         data_rx = UART_read();
   346  07D8  120A  118A  27A5  120A  118A  	fcall	_UART_read
   347  07DD  00F1               	movwf	??_main
   348  07DE  0871               	movf	??_main,w
   349  07DF  00F4               	movwf	main@data_rx
   350                           
   351                           ;main.c: 24:         switch(data_rx){
   352  07E0  2FE9               	goto	l690
   353  07E1                     l51:	
   354                           ;main.c: 25:             case '1': {
   355                           
   356                           
   357                           ;main.c: 26:                 PORTBbits.RB0 = 1;
   358  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   359  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   360  07E3  1406               	bsf	6,0	;volatile
   361                           
   362                           ;main.c: 27:                 break;
   363  07E4  2FD8               	goto	l686
   364  07E5                     l53:	
   365                           ;main.c: 28:             };main.c: 29:             case '2': {
   366                           
   367                           
   368                           ;main.c: 30:                 PORTBbits.RB0 = 1;
   369  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   370  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   371  07E7  1406               	bsf	6,0	;volatile
   372                           
   373                           ;main.c: 31:                 break;
   374  07E8  2FD8               	goto	l686
   375  07E9                     l690:
   376  07E9  0874               	movf	main@data_rx,w
   377  07EA  00F1               	movwf	??_main
   378  07EB  01F2               	clrf	??_main+1
   379                           
   380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   381                           ; Switch size 1, requested type "simple"
   382                           ; Number of cases is 1, Range of values is 0 to 0
   383                           ; switch strategies available:
   384                           ; Name         Instructions Cycles
   385                           ; simple_byte            4     3 (average)
   386                           ; direct_byte           11     8 (fixed)
   387                           ; jumptable            260     6 (fixed)
   388                           ;	Chosen strategy is simple_byte
   389  07EC  0872               	movf	??_main+1,w
   390  07ED  3A00               	xorlw	0	; case 0
   391  07EE  1903               	skipnz
   392  07EF  2FF1               	goto	l728
   393  07F0  2FD8               	goto	l686
   394  07F1                     l728:
   395                           
   396                           ; Switch size 1, requested type "simple"
   397                           ; Number of cases is 2, Range of values is 49 to 50
   398                           ; switch strategies available:
   399                           ; Name         Instructions Cycles
   400                           ; simple_byte            7     4 (average)
   401                           ; direct_byte           17    11 (fixed)
   402                           ; jumptable            263     9 (fixed)
   403                           ;	Chosen strategy is simple_byte
   404  07F1  0871               	movf	??_main,w
   405  07F2  3A31               	xorlw	49	; case 49
   406  07F3  1903               	skipnz
   407  07F4  2FE1               	goto	l51
   408  07F5  3A03               	xorlw	3	; case 50
   409  07F6  1903               	skipnz
   410  07F7  2FE5               	goto	l53
   411  07F8  2FD8               	goto	l686
   412  07F9  120A  118A  2801   	ljmp	start
   413  07FC                     __end_of_main:
   414                           
   415                           	psect	text1
   416  07A5                     __ptext1:	
   417 ;; *************** function _UART_read *****************
   418 ;; Defined at:
   419 ;;		line 16 in file "../lib/uart/uart.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      unsigned char 
   426 ;; Registers used:
   427 ;;		wreg
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0
   436 ;;      Totals:         0       0       0       0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446  07A5                     _UART_read:	
   447                           ;psect for function _UART_read
   448                           
   449  07A5                     l658:	
   450                           ;incstack = 0
   451                           ; Regs used in _UART_read: [wreg]
   452                           
   453                           
   454                           ;../lib/uart/uart.c: 17:     if (PIR1bits.RCIF == 1) {
   455  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   456  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   457  07A7  1E8C               	btfss	12,5	;volatile
   458  07A8  2FAA               	goto	u11
   459  07A9  2FAB               	goto	u10
   460  07AA                     u11:
   461  07AA  2FAD               	goto	l666
   462  07AB                     u10:
   463  07AB                     l660:
   464                           
   465                           ;../lib/uart/uart.c: 18:         return RCREG;
   466  07AB  081A               	movf	26,w	;volatile
   467  07AC  2FAE               	goto	l21
   468  07AD                     l666:
   469                           
   470                           ;../lib/uart/uart.c: 20:         return 0;
   471  07AD  3000               	movlw	0
   472  07AE                     l21:
   473  07AE  0008               	return
   474  07AF                     __end_of_UART_read:
   475                           
   476                           	psect	text2
   477  07AF                     __ptext2:	
   478 ;; *************** function _UART_init *****************
   479 ;; Defined at:
   480 ;;		line 4 in file "../lib/uart/uart.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507  07AF                     _UART_init:	
   508                           ;psect for function _UART_init
   509                           
   510  07AF                     l648:	
   511                           ;incstack = 0
   512                           ; Regs used in _UART_init: [wreg]
   513                           
   514                           
   515                           ;../lib/uart/uart.c: 5:     TRISCbits.TRISC6 = 0;
   516  07AF  1683               	bsf	3,5	;RP0=1, select bank1
   517  07B0  1303               	bcf	3,6	;RP1=0, select bank1
   518  07B1  1307               	bcf	7,6	;volatile
   519                           
   520                           ;../lib/uart/uart.c: 6:     TRISCbits.TRISC7 = 1;
   521  07B2  1787               	bsf	7,7	;volatile
   522                           
   523                           ;../lib/uart/uart.c: 7:     TXSTAbits.SYNC = 0;
   524  07B3  1218               	bcf	24,4	;volatile
   525                           
   526                           ;../lib/uart/uart.c: 8:     TXSTAbits.TX9 = 0;
   527  07B4  1318               	bcf	24,6	;volatile
   528                           
   529                           ;../lib/uart/uart.c: 9:     TXSTAbits.BRGH = 1;
   530  07B5  1518               	bsf	24,2	;volatile
   531  07B6                     l650:
   532                           
   533                           ;../lib/uart/uart.c: 10:     SPBRG = 129;
   534  07B6  3081               	movlw	129
   535  07B7  0099               	movwf	25	;volatile
   536  07B8                     l652:
   537                           
   538                           ;../lib/uart/uart.c: 11:     RCSTAbits.SPEN = 1;
   539  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   540  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   541  07BA  1798               	bsf	24,7	;volatile
   542  07BB                     l654:
   543                           
   544                           ;../lib/uart/uart.c: 12:     TXSTAbits.TXEN = 1;
   545  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   546  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   547  07BD  1698               	bsf	24,5	;volatile
   548  07BE                     l656:
   549                           
   550                           ;../lib/uart/uart.c: 13:     RCSTAbits.CREN = 1;
   551  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   552  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   553  07C0  1618               	bsf	24,4	;volatile
   554  07C1                     l17:
   555  07C1  0008               	return
   556  07C2                     __end_of_UART_init:
   557  007E                     btemp	set	126	;btemp
   558  007E                     wtemp0	set	126
   559                           
   560                           	psect	config
   561                           
   562                           ;Config register CONFIG @ 0x2007
   563                           ;	Oscillator Selection bits
   564                           ;	FOSC = HS, HS oscillator
   565                           ;	Watchdog Timer Enable bit
   566                           ;	WDTE = OFF, WDT disabled
   567                           ;	Power-up Timer Enable bit
   568                           ;	PWRTE = ON, PWRT enabled
   569                           ;	Brown-out Reset Enable bit
   570                           ;	BOREN = OFF, BOR disabled
   571                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   572                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   573                           ;	Data EEPROM Memory Code Protection bit
   574                           ;	CPD = OFF, Data EEPROM code protection off
   575                           ;	Flash Program Memory Write Enable bits
   576                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   577                           ;	In-Circuit Debugger Mode bit
   578                           ;	DEBUG = 0x1, unprogrammed default
   579                           ;	Flash Program Memory Code Protection bit
   580                           ;	CP = OFF, Code protection off
   581  2007                     	org	8199
   582  2007  3F32               	dw	16178

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      15
                                              0 COMMON     4     4      0
                          _UART_init
                          _UART_read
 ---------------------------------------------------------------------------------
 (1) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      4       4       1       30.8%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Aug 19 17:57:30 2024

                     l21 07AE                       l17 07C1                       l51 07E1  
                     l53 07E5                       u10 07AB                       u11 07AA  
                     u47 07D1                      l650 07B6                      l652 07B8  
                    l660 07AB                      l654 07BB                      l656 07BE  
                    l648 07AF                      l728 07F1                      l680 07C2  
                    l666 07AD                      l658 07A5                      l690 07E9  
                    l682 07C6                      l684 07CB                      l686 07D8  
            main@data_rx 0074                     _main 07C2                     btemp 007E  
                   start 0001                    ?_main 0071                    _RCREG 001A  
                  _SPBRG 0099                    _TRISB 0086                    _TXREG 0019  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0071        __end_of_UART_init 07C2  
      __end_of_UART_read 07AF  __end_of__initialization 07FC           __pcstackCOMMON 0071  
             __pmaintext 07C2                  __ptext1 07A5                  __ptext2 07AF  
   end_of_initialization 07FC                _RCSTAbits 0018                _PORTBbits 0006  
              _UART_init 07AF                _UART_read 07A5                _TRISCbits 0087  
              _TXSTAbits 0098               ?_UART_init 0071               ?_UART_read 0071  
    start_initialization 07FC                ___latbits 0002              ??_UART_init 0071  
            ??_UART_read 0071                 _PIR1bits 000C  
