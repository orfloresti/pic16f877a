

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 16 11:03:04 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0000                     	;# 
   174     0001                     	;# 
   175     0002                     	;# 
   176     0003                     	;# 
   177     0004                     	;# 
   178     0005                     	;# 
   179     0006                     	;# 
   180     0007                     	;# 
   181     0008                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     000E                     	;# 
   189     000F                     	;# 
   190     0010                     	;# 
   191     0011                     	;# 
   192     0012                     	;# 
   193     0013                     	;# 
   194     0014                     	;# 
   195     0015                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     001D                     	;# 
   206     001E                     	;# 
   207     001F                     	;# 
   208     0081                     	;# 
   209     0085                     	;# 
   210     0086                     	;# 
   211     0087                     	;# 
   212     0088                     	;# 
   213     0089                     	;# 
   214     008C                     	;# 
   215     008D                     	;# 
   216     008E                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     000B                     _INTCONbits	set	11
   234     0019                     _TXREG	set	25
   235     001A                     _RCREG	set	26
   236     000C                     _PIR1bits	set	12
   237     0018                     _RCSTAbits	set	24
   238     0081                     _OPTION_REGbits	set	129
   239     008C                     _PIE1bits	set	140
   240     0099                     _SPBRG	set	153
   241     0098                     _TXSTAbits	set	152
   242     0087                     _TRISCbits	set	135
   243                           
   244                           	psect	strings
   245     0013                     __pstrings:
   246     0013                     stringtab:
   247     0013                     __stringtab:
   248     0013                     stringcode:	
   249                           ;	String table - string pointers are 1 byte each
   250                           
   251     0013                     stringdir:
   252     0013  3000               	movlw	high stringdir
   253     0014  008A               	movwf	10
   254     0015  0804               	movf	4,w
   255     0016  0A84               	incf	4,f
   256     0017  0782               	addwf	2,f
   257     0018                     __stringbase:
   258     0018  3400               	retlw	0
   259     0019                     __end_of__stringtab:
   260     0019                     STR_2:
   261     0019  3445               	retlw	69	;'E'
   262     001A  3478               	retlw	120	;'x'
   263     001B  3474               	retlw	116	;'t'
   264     001C  3465               	retlw	101	;'e'
   265     001D  3472               	retlw	114	;'r'
   266     001E  346E               	retlw	110	;'n'
   267     001F  3461               	retlw	97	;'a'
   268     0020  346C               	retlw	108	;'l'
   269     0021  3420               	retlw	32	;' '
   270     0022  3469               	retlw	105	;'i'
   271     0023  346E               	retlw	110	;'n'
   272     0024  3474               	retlw	116	;'t'
   273     0025  3465               	retlw	101	;'e'
   274     0026  3472               	retlw	114	;'r'
   275     0027  3472               	retlw	114	;'r'
   276     0028  3475               	retlw	117	;'u'
   277     0029  3470               	retlw	112	;'p'
   278     002A  3474               	retlw	116	;'t'
   279     002B  3420               	retlw	32	;' '
   280     002C  3455               	retlw	85	;'U'
   281     002D  3453               	retlw	83	;'S'
   282     002E  3441               	retlw	65	;'A'
   283     002F  3452               	retlw	82	;'R'
   284     0030  3454               	retlw	84	;'T'
   285     0031  3420               	retlw	32	;' '
   286     0032  3452               	retlw	82	;'R'
   287     0033  3458               	retlw	88	;'X'
   288     0034  3420               	retlw	32	;' '
   289     0035  340A               	retlw	10
   290     0036  340D               	retlw	13
   291     0037  3400               	retlw	0
   292     0038                     STR_1:
   293     0038  3445               	retlw	69	;'E'
   294     0039  3478               	retlw	120	;'x'
   295     003A  3474               	retlw	116	;'t'
   296     003B  3465               	retlw	101	;'e'
   297     003C  3472               	retlw	114	;'r'
   298     003D  346E               	retlw	110	;'n'
   299     003E  3461               	retlw	97	;'a'
   300     003F  346C               	retlw	108	;'l'
   301     0040  3420               	retlw	32	;' '
   302     0041  3469               	retlw	105	;'i'
   303     0042  346E               	retlw	110	;'n'
   304     0043  3474               	retlw	116	;'t'
   305     0044  3465               	retlw	101	;'e'
   306     0045  3472               	retlw	114	;'r'
   307     0046  3472               	retlw	114	;'r'
   308     0047  3475               	retlw	117	;'u'
   309     0048  3470               	retlw	112	;'p'
   310     0049  3474               	retlw	116	;'t'
   311     004A  3420               	retlw	32	;' '
   312     004B  3452               	retlw	82	;'R'
   313     004C  3442               	retlw	66	;'B'
   314     004D  3430               	retlw	48	;'0'
   315     004E  3420               	retlw	32	;' '
   316     004F  340A               	retlw	10
   317     0050  340D               	retlw	13
   318     0051  3400               	retlw	0
   319     0052                     STR_3:
   320     0052  344D               	retlw	77	;'M'
   321     0053  3465               	retlw	101	;'e'
   322     0054  3473               	retlw	115	;'s'
   323     0055  3473               	retlw	115	;'s'
   324     0056  3461               	retlw	97	;'a'
   325     0057  3467               	retlw	103	;'g'
   326     0058  3465               	retlw	101	;'e'
   327     0059  340A               	retlw	10
   328     005A  340D               	retlw	13
   329     005B  3400               	retlw	0
   330                           
   331                           	psect	cinit
   332     07FC                     start_initialization:	
   333                           ; #config settings
   334                           
   335     07FC                     __initialization:
   336     07FC                     end_of_initialization:	
   337                           ;End of C runtime variable initialization code
   338                           
   339     07FC                     __end_of__initialization:
   340     07FC  0183               	clrf	3
   341     07FD  120A  118A  2FA9   	ljmp	_main	;jump to C main() function
   342                           
   343                           	psect	cstackCOMMON
   344     0071                     __pcstackCOMMON:
   345     0071                     ?_UART_init:
   346     0071                     ?_UART_write:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0071                     ?_UART_printf:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0071                     ?_interrupts:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0071                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0071                     ?i1_UART_write:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0071                     ??i1_UART_write:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0071                     ?i1_UART_printf:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0071                     i1UART_write@data:	
   368                           ; 1 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372     0071                     	ds	1
   373     0072                     ??i1_UART_printf:
   374     0072                     i1UART_printf@text:	
   375                           ; 1 bytes @ 0x1
   376                           
   377                           
   378                           ; 1 bytes @ 0x1
   379     0072                     	ds	1
   380     0073                     ??_interrupts:
   381                           
   382                           ; 1 bytes @ 0x2
   383     0073                     	ds	4
   384     0077                     interrupts@data:
   385                           
   386                           ; 1 bytes @ 0x6
   387     0077                     	ds	1
   388                           
   389                           	psect	cstackBANK0
   390     0020                     __pcstackBANK0:
   391     0020                     ??_UART_init:
   392     0020                     ??_UART_write:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0020                     UART_write@data:	
   396                           ; 1 bytes @ 0x0
   397                           
   398                           
   399                           ; 1 bytes @ 0x0
   400     0020                     	ds	1
   401     0021                     ??_UART_printf:
   402     0021                     UART_printf@text:	
   403                           ; 1 bytes @ 0x1
   404                           
   405                           
   406                           ; 1 bytes @ 0x1
   407     0021                     	ds	1
   408     0022                     ??_main:
   409                           
   410                           ; 1 bytes @ 0x2
   411     0022                     	ds	3
   412                           
   413                           	psect	maintext
   414     07A9                     __pmaintext:	
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 26 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : B00/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          0       3       0       0       0
   437 ;;      Totals:         0       3       0       0       0
   438 ;;Total ram usage:        3 bytes
   439 ;; Hardware stack levels required when called: 5
   440 ;; This function calls:
   441 ;;		_UART_init
   442 ;;		_UART_printf
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448     07A9                     _main:	
   449                           ;psect for function _main
   450                           
   451     07A9                     l724:	
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   454                           
   455                           
   456                           ;main.c: 28:     UART_init();
   457     07A9  120A  118A  2754  120A  118A  	fcall	_UART_init
   458     07AE                     l726:
   459                           
   460                           ;main.c: 31:     INTCONbits.GIE = 1;
   461     07AE  178B               	bsf	11,7	;volatile
   462     07AF                     l728:
   463                           
   464                           ;main.c: 32:     INTCONbits.INTE = 1;
   465     07AF  160B               	bsf	11,4	;volatile
   466     07B0                     l730:
   467                           
   468                           ;main.c: 34:     INTCONbits.PEIE = 1;
   469     07B0  170B               	bsf	11,6	;volatile
   470     07B1                     l732:
   471                           
   472                           ;main.c: 35:     PIE1bits.RCIE = 1;
   473     07B1  1683               	bsf	3,5	;RP0=1, select bank1
   474     07B2  1303               	bcf	3,6	;RP1=0, select bank1
   475     07B3  168C               	bsf	12,5	;volatile
   476     07B4                     l734:
   477                           
   478                           ;main.c: 37:     OPTION_REGbits.INTEDG = 1;
   479     07B4  1701               	bsf	1,6	;volatile
   480     07B5                     l736:
   481                           
   482                           ;main.c: 40:         UART_printf("Message\n\r");
   483     07B5  303A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   484     07B6  120A  118A  2786  120A  118A  	fcall	_UART_printf
   485     07BB                     l738:
   486                           
   487                           ;main.c: 41:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   488     07BB  301A               	movlw	26
   489     07BC  1283               	bcf	3,5	;RP0=0, select bank0
   490     07BD  1303               	bcf	3,6	;RP1=0, select bank0
   491     07BE  00A4               	movwf	??_main+2
   492     07BF  305E               	movlw	94
   493     07C0  00A3               	movwf	??_main+1
   494     07C1  306D               	movlw	109
   495     07C2  00A2               	movwf	??_main
   496     07C3                     u147:
   497     07C3  0BA2               	decfsz	??_main,f
   498     07C4  2FC3               	goto	u147
   499     07C5  0BA3               	decfsz	??_main+1,f
   500     07C6  2FC3               	goto	u147
   501     07C7  0BA4               	decfsz	??_main+2,f
   502     07C8  2FC3               	goto	u147
   503     07C9  2FCA               	nop2
   504     07CA  2FB5               	goto	l736
   505     07CB  120A  118A  2810   	ljmp	start
   506     07CE                     __end_of_main:
   507                           
   508                           	psect	text1
   509     0786                     __ptext1:	
   510 ;; *************** function _UART_printf *****************
   511 ;; Defined at:
   512 ;;		line 29 in file "../lib/uart/uart.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;  text            1    wreg     PTR unsigned char 
   515 ;;		 -> STR_3(10), STR_2(31), STR_1(26), 
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  text            1    1[BANK0 ] PTR unsigned char 
   518 ;;		 -> STR_3(10), STR_2(31), STR_1(26), 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         0       1       0       0       0
   530 ;;      Temps:          0       0       0       0       0
   531 ;;      Totals:         0       1       0       0       0
   532 ;;Total ram usage:        1 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 4
   535 ;; This function calls:
   536 ;;		_UART_write
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542     0786                     _UART_printf:	
   543                           ;psect for function _UART_printf
   544                           
   545                           
   546                           ;incstack = 0
   547                           ; Regs used in _UART_printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   548                           ;UART_printf@text stored from wreg
   549     0786  1283               	bcf	3,5	;RP0=0, select bank0
   550     0787  1303               	bcf	3,6	;RP1=0, select bank0
   551     0788  00A1               	movwf	UART_printf@text
   552     0789                     l694:
   553                           
   554                           ;../lib/uart/uart.c: 30:     while (*text != 0x00) {
   555     0789  2F9C               	goto	l700
   556     078A                     l696:
   557                           
   558                           ;../lib/uart/uart.c: 31:         UART_write(*text);
   559     078A  0821               	movf	UART_printf@text,w
   560     078B  0084               	movwf	4
   561     078C  120A  118A  2013  120A  118A  	fcall	stringdir
   562     0791  120A  118A  2748  120A  118A  	fcall	_UART_write
   563     0796                     l698:
   564                           
   565                           ;../lib/uart/uart.c: 32:         text++;
   566     0796  3001               	movlw	1
   567     0797  00FF               	movwf	btemp+1
   568     0798  087F               	movf	btemp+1,w
   569     0799  1283               	bcf	3,5	;RP0=0, select bank0
   570     079A  1303               	bcf	3,6	;RP1=0, select bank0
   571     079B  07A1               	addwf	UART_printf@text,f
   572     079C                     l700:
   573                           
   574                           ;../lib/uart/uart.c: 30:     while (*text != 0x00) {
   575     079C  0821               	movf	UART_printf@text,w
   576     079D  0084               	movwf	4
   577     079E  120A  118A  2013  120A  118A  	fcall	stringdir
   578     07A3  3A00               	xorlw	0
   579     07A4  1D03               	skipz
   580     07A5  2FA7               	goto	u101
   581     07A6  2FA8               	goto	u100
   582     07A7                     u101:
   583     07A7  2F8A               	goto	l696
   584     07A8                     u100:
   585     07A8                     l34:
   586     07A8  0008               	return
   587     07A9                     __end_of_UART_printf:
   588                           
   589                           	psect	text2
   590     0748                     __ptext2:	
   591 ;; *************** function _UART_write *****************
   592 ;; Defined at:
   593 ;;		line 24 in file "../lib/uart/uart.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  data            1    wreg     unsigned char 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  data            1    0[BANK0 ] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       1       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       1       0       0       0
   611 ;;Total ram usage:        1 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 3
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_UART_printf
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621     0748                     _UART_write:	
   622                           ;psect for function _UART_write
   623                           
   624                           
   625                           ;incstack = 0
   626                           ; Regs used in _UART_write: [wreg]
   627                           ;UART_write@data stored from wreg
   628     0748  1283               	bcf	3,5	;RP0=0, select bank0
   629     0749  1303               	bcf	3,6	;RP1=0, select bank0
   630     074A  00A0               	movwf	UART_write@data
   631     074B                     l680:
   632                           
   633                           ;../lib/uart/uart.c: 25:     TXREG = data;
   634     074B  0820               	movf	UART_write@data,w
   635     074C  0099               	movwf	25	;volatile
   636     074D                     l25:	
   637                           ;../lib/uart/uart.c: 26:     while (TXSTAbits.TRMT == 0);
   638                           
   639     074D  1683               	bsf	3,5	;RP0=1, select bank1
   640     074E  1303               	bcf	3,6	;RP1=0, select bank1
   641     074F  1C98               	btfss	24,1	;volatile
   642     0750  2F52               	goto	u81
   643     0751  2F53               	goto	u80
   644     0752                     u81:
   645     0752  2F4D               	goto	l25
   646     0753                     u80:
   647     0753                     l28:
   648     0753  0008               	return
   649     0754                     __end_of_UART_write:
   650                           
   651                           	psect	text3
   652     0754                     __ptext3:	
   653 ;; *************** function _UART_init *****************
   654 ;; Defined at:
   655 ;;		line 4 in file "../lib/uart/uart.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0
   672 ;;      Totals:         0       0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used: 1
   675 ;; Hardware stack levels required when called: 3
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683     0754                     _UART_init:	
   684                           ;psect for function _UART_init
   685                           
   686     0754                     l684:	
   687                           ;incstack = 0
   688                           ; Regs used in _UART_init: [wreg]
   689                           
   690                           
   691                           ;../lib/uart/uart.c: 5:     TRISCbits.TRISC6 = 0;
   692     0754  1683               	bsf	3,5	;RP0=1, select bank1
   693     0755  1303               	bcf	3,6	;RP1=0, select bank1
   694     0756  1307               	bcf	7,6	;volatile
   695                           
   696                           ;../lib/uart/uart.c: 6:     TRISCbits.TRISC7 = 1;
   697     0757  1787               	bsf	7,7	;volatile
   698                           
   699                           ;../lib/uart/uart.c: 7:     TXSTAbits.SYNC = 0;
   700     0758  1218               	bcf	24,4	;volatile
   701                           
   702                           ;../lib/uart/uart.c: 8:     TXSTAbits.TX9 = 0;
   703     0759  1318               	bcf	24,6	;volatile
   704                           
   705                           ;../lib/uart/uart.c: 9:     TXSTAbits.BRGH = 1;
   706     075A  1518               	bsf	24,2	;volatile
   707     075B                     l686:
   708                           
   709                           ;../lib/uart/uart.c: 10:     SPBRG = 129;
   710     075B  3081               	movlw	129
   711     075C  0099               	movwf	25	;volatile
   712     075D                     l688:
   713                           
   714                           ;../lib/uart/uart.c: 11:     RCSTAbits.SPEN = 1;
   715     075D  1283               	bcf	3,5	;RP0=0, select bank0
   716     075E  1303               	bcf	3,6	;RP1=0, select bank0
   717     075F  1798               	bsf	24,7	;volatile
   718     0760                     l690:
   719                           
   720                           ;../lib/uart/uart.c: 12:     TXSTAbits.TXEN = 1;
   721     0760  1683               	bsf	3,5	;RP0=1, select bank1
   722     0761  1303               	bcf	3,6	;RP1=0, select bank1
   723     0762  1698               	bsf	24,5	;volatile
   724     0763                     l692:
   725                           
   726                           ;../lib/uart/uart.c: 13:     RCSTAbits.CREN = 1;
   727     0763  1283               	bcf	3,5	;RP0=0, select bank0
   728     0764  1303               	bcf	3,6	;RP1=0, select bank0
   729     0765  1618               	bsf	24,4	;volatile
   730     0766                     l17:
   731     0766  0008               	return
   732     0767                     __end_of_UART_init:
   733                           
   734                           	psect	text4
   735     07CE                     __ptext4:	
   736 ;; *************** function _interrupts *****************
   737 ;; Defined at:
   738 ;;		line 13 in file "main.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  data            1    6[COMMON] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         0       0       0       0       0
   753 ;;      Locals:         1       0       0       0       0
   754 ;;      Temps:          4       0       0       0       0
   755 ;;      Totals:         5       0       0       0       0
   756 ;;Total ram usage:        5 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 2
   759 ;; This function calls:
   760 ;;		i1_UART_printf
   761 ;;		i1_UART_write
   762 ;; This function is called by:
   763 ;;		Interrupt level 1
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767     07CE                     _interrupts:	
   768                           ;psect for function _interrupts
   769                           
   770     07CE                     i1l710:
   771                           
   772                           ;main.c: 15:     if (INTCONbits.INTF == 1) {
   773     07CE  1C8B               	btfss	11,1	;volatile
   774     07CF  2FD1               	goto	u12_21
   775     07D0  2FD2               	goto	u12_20
   776     07D1                     u12_21:
   777     07D1  2FDA               	goto	i1l57
   778     07D2                     u12_20:
   779     07D2                     i1l712:
   780                           
   781                           ;main.c: 16:         UART_printf("External interrupt RB0 \n\r");
   782     07D2  3020               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   783     07D3  120A  118A  2767  120A  118A  	fcall	i1_UART_printf
   784     07D8                     i1l714:
   785                           
   786                           ;main.c: 17:         INTCONbits.INTF = 0;
   787     07D8  108B               	bcf	11,1	;volatile
   788                           
   789                           ;main.c: 18:     } else if (PIR1bits.RCIF == 1) {
   790     07D9  2FF1               	goto	i1l60
   791     07DA                     i1l57:
   792     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   793     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   794     07DC  1E8C               	btfss	12,5	;volatile
   795     07DD  2FDF               	goto	u13_21
   796     07DE  2FE0               	goto	u13_20
   797     07DF                     u13_21:
   798     07DF  2FF1               	goto	i1l60
   799     07E0                     u13_20:
   800     07E0                     i1l716:
   801                           
   802                           ;main.c: 19:         char data = RCREG;
   803     07E0  081A               	movf	26,w	;volatile
   804     07E1  00F7               	movwf	interrupts@data
   805     07E2                     i1l718:
   806                           
   807                           ;main.c: 20:         UART_write(data);
   808     07E2  0877               	movf	interrupts@data,w
   809     07E3  120A  118A  273C  120A  118A  	fcall	i1_UART_write
   810     07E8                     i1l720:
   811                           
   812                           ;main.c: 21:         UART_printf("External interrupt USART RX \n\r");
   813     07E8  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   814     07E9  120A  118A  2767  120A  118A  	fcall	i1_UART_printf
   815     07EE                     i1l722:
   816                           
   817                           ;main.c: 22:         PIR1bits.RCIF = 0;
   818     07EE  1283               	bcf	3,5	;RP0=0, select bank0
   819     07EF  1303               	bcf	3,6	;RP1=0, select bank0
   820     07F0  128C               	bcf	12,5	;volatile
   821     07F1                     i1l60:
   822     07F1  0876               	movf	??_interrupts+3,w
   823     07F2  00FF               	movwf	btemp+1
   824     07F3  0875               	movf	??_interrupts+2,w
   825     07F4  008A               	movwf	10
   826     07F5  0874               	movf	??_interrupts+1,w
   827     07F6  0084               	movwf	4
   828     07F7  0E73               	swapf	??_interrupts,w
   829     07F8  0083               	movwf	3
   830     07F9  0EFE               	swapf	btemp,f
   831     07FA  0E7E               	swapf	btemp,w
   832     07FB  0009               	retfie
   833     07FC                     __end_of_interrupts:
   834                           
   835                           	psect	intentry
   836     0004                     __pintentry:	
   837                           ;incstack = 0
   838                           ; Regs used in _interrupts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   839                           
   840     0004                     interrupt_function:
   841     007E                     saved_w	set	btemp
   842     0004  00FE               	movwf	btemp
   843     0005  0E03               	swapf	3,w
   844     0006  00F3               	movwf	??_interrupts
   845     0007  0804               	movf	4,w
   846     0008  00F4               	movwf	??_interrupts+1
   847     0009  080A               	movf	10,w
   848     000A  00F5               	movwf	??_interrupts+2
   849     000B  087F               	movf	btemp+1,w
   850     000C  00F6               	movwf	??_interrupts+3
   851     000D  120A  118A  2FCE   	ljmp	_interrupts
   852                           
   853                           	psect	text5
   854     0767                     __ptext5:	
   855 ;; *************** function i1_UART_printf *****************
   856 ;; Defined at:
   857 ;;		line 29 in file "../lib/uart/uart.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  text            1    wreg     PTR unsigned char 
   860 ;;		 -> STR_3(10), STR_2(31), STR_1(26), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  text            1    1[COMMON] PTR unsigned char 
   863 ;;		 -> STR_3(10), STR_2(31), STR_1(26), 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         1       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0
   876 ;;      Totals:         1       0       0       0       0
   877 ;;Total ram usage:        1 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 1
   880 ;; This function calls:
   881 ;;		i1_UART_write
   882 ;; This function is called by:
   883 ;;		_interrupts
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887     0767                     i1_UART_printf:	
   888                           ;psect for function i1_UART_printf
   889                           
   890                           
   891                           ;incstack = 0
   892                           ; Regs used in i1_UART_printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   893                           ;i1UART_printf@text stored from wreg
   894     0767  00F2               	movwf	i1UART_printf@text
   895     0768                     i1l702:
   896                           
   897                           ;../lib/uart/uart.c: 30:     while (*text != 0x00) {
   898     0768  2F79               	goto	i1l708
   899     0769                     i1l704:
   900                           
   901                           ;../lib/uart/uart.c: 31:         UART_write(*text);
   902     0769  0872               	movf	i1UART_printf@text,w
   903     076A  0084               	movwf	4
   904     076B  120A  118A  2013  120A  118A  	fcall	stringdir
   905     0770  120A  118A  273C  120A  118A  	fcall	i1_UART_write
   906     0775                     i1l706:
   907                           
   908                           ;../lib/uart/uart.c: 32:         text++;
   909     0775  3001               	movlw	1
   910     0776  00FF               	movwf	btemp+1
   911     0777  087F               	movf	btemp+1,w
   912     0778  07F2               	addwf	i1UART_printf@text,f
   913     0779                     i1l708:
   914                           
   915                           ;../lib/uart/uart.c: 30:     while (*text != 0x00) {
   916     0779  0872               	movf	i1UART_printf@text,w
   917     077A  0084               	movwf	4
   918     077B  120A  118A  2013  120A  118A  	fcall	stringdir
   919     0780  3A00               	xorlw	0
   920     0781  1D03               	skipz
   921     0782  2F84               	goto	u11_21
   922     0783  2F85               	goto	u11_20
   923     0784                     u11_21:
   924     0784  2F69               	goto	i1l704
   925     0785                     u11_20:
   926     0785                     i1l34:
   927     0785  0008               	return
   928     0786                     __end_ofi1_UART_printf:
   929                           
   930                           	psect	text6
   931     073C                     __ptext6:	
   932 ;; *************** function i1_UART_write *****************
   933 ;; Defined at:
   934 ;;		line 24 in file "../lib/uart/uart.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  data            1    wreg     unsigned char 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  data            1    0[COMMON] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         1       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0
   951 ;;      Totals:         1       0       0       0       0
   952 ;;Total ram usage:        1 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_interrupts
   958 ;;		i1_UART_printf
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962     073C                     i1_UART_write:	
   963                           ;psect for function i1_UART_write
   964                           
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in i1_UART_write: [wreg]
   968                           ;i1UART_write@data stored from wreg
   969     073C  00F1               	movwf	i1UART_write@data
   970     073D                     i1l682:
   971                           
   972                           ;../lib/uart/uart.c: 25:     TXREG = data;
   973     073D  0871               	movf	i1UART_write@data,w
   974     073E  1283               	bcf	3,5	;RP0=0, select bank0
   975     073F  1303               	bcf	3,6	;RP1=0, select bank0
   976     0740  0099               	movwf	25	;volatile
   977     0741                     i1l25:	
   978                           ;../lib/uart/uart.c: 26:     while (TXSTAbits.TRMT == 0);
   979                           
   980     0741  1683               	bsf	3,5	;RP0=1, select bank1
   981     0742  1303               	bcf	3,6	;RP1=0, select bank1
   982     0743  1C98               	btfss	24,1	;volatile
   983     0744  2F46               	goto	u9_21
   984     0745  2F47               	goto	u9_20
   985     0746                     u9_21:
   986     0746  2F41               	goto	i1l25
   987     0747                     u9_20:
   988     0747                     i1l28:
   989     0747  0008               	return
   990     0748                     __end_ofi1_UART_write:
   991     007E                     btemp	set	126	;btemp
   992     007E                     wtemp0	set	126
   993                           
   994                           	psect	config
   995                           
   996                           ;Config register CONFIG @ 0x2007
   997                           ;	Oscillator Selection bits
   998                           ;	FOSC = HS, HS oscillator
   999                           ;	Watchdog Timer Enable bit
  1000                           ;	WDTE = OFF, WDT disabled
  1001                           ;	Power-up Timer Enable bit
  1002                           ;	PWRTE = ON, PWRT enabled
  1003                           ;	Brown-out Reset Enable bit
  1004                           ;	BOREN = OFF, BOR disabled
  1005                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1006                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1007                           ;	Data EEPROM Memory Code Protection bit
  1008                           ;	CPD = OFF, Data EEPROM code protection off
  1009                           ;	Flash Program Memory Write Enable bits
  1010                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1011                           ;	In-Circuit Debugger Mode bit
  1012                           ;	DEBUG = 0x1, unprogrammed default
  1013                           ;	Flash Program Memory Code Protection bit
  1014                           ;	CP = OFF, Code protection off
  1015     2007                     	org	8199
  1016     2007  3F32               	dw	16178

Data Sizes:
    Strings     67
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      7       7
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_printf@text	PTR unsigned char  size(1) Largest target is 31
		 -> STR_1(CODE[26]), STR_2(CODE[31]), STR_3(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupts in COMMON

    _interrupts->i1_UART_printf
    i1_UART_printf->i1_UART_write

Critical Paths under _main in BANK0

    _main->_UART_printf
    _UART_printf->_UART_write

Critical Paths under _interrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupts in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupts in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupts in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     166
                                              2 BANK0      3     3      0
                          _UART_init
                        _UART_printf
 ---------------------------------------------------------------------------------
 (1) _UART_printf                                          1     1      0     166
                                              1 BANK0      1     1      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupts                                           5     5      0     112
                                              2 COMMON     5     5      0
                      i1_UART_printf
                       i1_UART_write
 ---------------------------------------------------------------------------------
 (4) i1_UART_printf                                        1     1      0      67
                                              1 COMMON     1     1      0
                       i1_UART_write
 ---------------------------------------------------------------------------------
 (4) i1_UART_write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_printf
     _UART_write

 _interrupts (ROOT)
   i1_UART_printf
     i1_UART_write
   i1_UART_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      7       7       1       53.8%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 16 11:03:04 2024

                      pc 0002        i1UART_printf@text 0072                       l17 0766  
                     l25 074D                       l34 07A8                       l28 0753  
                     u80 0753                       u81 0752                       fsr 0004  
  __end_ofi1_UART_printf 0786                      l700 079C                      l730 07B0  
                    l732 07B1                      l724 07A9                      l734 07B4  
                    l726 07AE                      l680 074B                      l736 07B5  
                    l728 07AF                      l690 0760                      l738 07BB  
                    l692 0763                      l684 0754                      l686 075B  
                    l694 0789                      l688 075D                      l696 078A  
                    l698 0796                      u100 07A8                      u101 07A7  
                    u147 07C3                      fsr0 0004                     STR_1 0038  
                   STR_2 0019                     STR_3 0052                     i1l25 0741  
                   i1l34 0785                     i1l28 0747                     i1l60 07F1  
                   i1l57 07DA                     u9_20 0747                     u9_21 0746  
                   _main 07A9                     btemp 007E         i1UART_write@data 0071  
                   start 0010                    ?_main 0071                    i1l702 0768  
                  i1l710 07CE                    i1l704 0769                    i1l720 07E8  
                  i1l712 07D2                    i1l706 0775                    i1l722 07EE  
                  i1l714 07D8                    i1l708 0779                    i1l716 07E0  
                  i1l718 07E2                    i1l682 073D                    _RCREG 001A  
                  u11_20 0785                    u11_21 0784                    u12_20 07D2  
                  u12_21 07D1                    u13_20 07E0                    u13_21 07DF  
                  _SPBRG 0099                    _TXREG 0019              ?_UART_write 0071  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07CE                   ??_main 0022  
      __end_of_UART_init 0767             ?_UART_printf 0071                   saved_w 007E  
__end_of__initialization 07FC           __pcstackCOMMON 0071            ?i1_UART_write 0071  
         _OPTION_REGbits 0081               __pmaintext 07A9           ??i1_UART_write 0071  
             __pintentry 0004             ??_UART_write 0020               __stringtab 0013  
     __end_of_UART_write 0754          UART_printf@text 0021                  __ptext1 0786  
                __ptext2 0748                  __ptext3 0754                  __ptext4 07CE  
                __ptext5 0767                  __ptext6 073C               _interrupts 07CE  
   end_of_initialization 07FC           interrupts@data 0077                _RCSTAbits 0018  
          i1_UART_printf 0767                _UART_init 0754                _TRISCbits 0087  
   __end_ofi1_UART_write 0748                _TXSTAbits 0098           ?i1_UART_printf 0071  
             ?_UART_init 0071      start_initialization 07FC              ?_interrupts 0071  
              ___latbits 0002            __pcstackBANK0 0020          ??i1_UART_printf 0072  
              __pstrings 0013              ??_UART_init 0020        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C             i1_UART_write 073C  
          ??_UART_printf 0021              __stringbase 0018           UART_write@data 0020  
     __end_of__stringtab 0019      __end_of_UART_printf 07A9             ??_interrupts 0073  
     __end_of_interrupts 07FC               _INTCONbits 000B                 intlevel1 0000  
              stringcode 0013              _UART_printf 0786                 stringdir 0013  
               stringtab 0013               _UART_write 0748  
