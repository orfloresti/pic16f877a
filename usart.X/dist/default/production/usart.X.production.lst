

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Aug 14 00:12:45 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0005                     _PORTAbits	set	5
   170  0019                     _TXREG	set	25
   171  001A                     _RCREG	set	26
   172  000C                     _PIR1bits	set	12
   173  0018                     _RCSTAbits	set	24
   174  0085                     _TRISAbits	set	133
   175  0099                     _SPBRG	set	153
   176  0098                     _TXSTAbits	set	152
   177  0087                     _TRISCbits	set	135
   178                           
   179                           	psect	strings
   180  0003                     __pstrings:
   181  0003                     stringtab:
   182  0003                     __stringtab:
   183  0003                     stringcode:	
   184                           ;	String table - string pointers are 1 byte each
   185                           
   186  0003                     stringdir:
   187  0003  3000               	movlw	high stringdir
   188  0004  008A               	movwf	10
   189  0005  0804               	movf	4,w
   190  0006  0A84               	incf	4,f
   191  0007  0782               	addwf	2,f
   192  0008                     __stringbase:
   193  0008  3400               	retlw	0
   194  0009                     __end_of__stringtab:
   195  0009                     STR_1:
   196  0009  3448               	retlw	72	;'H'
   197  000A  3465               	retlw	101	;'e'
   198  000B  346C               	retlw	108	;'l'
   199  000C  346C               	retlw	108	;'l'
   200  000D  346F               	retlw	111	;'o'
   201  000E  3420               	retlw	32	;' '
   202  000F  3477               	retlw	119	;'w'
   203  0010  346F               	retlw	111	;'o'
   204  0011  3472               	retlw	114	;'r'
   205  0012  346C               	retlw	108	;'l'
   206  0013  3464               	retlw	100	;'d'
   207  0014  3420               	retlw	32	;' '
   208  0015  340A               	retlw	10
   209  0016  340D               	retlw	13
   210  0017  3400               	retlw	0
   211  0018                     STR_3:
   212  0018  3430               	retlw	48	;'0'
   213  0019  3420               	retlw	32	;' '
   214  001A  342D               	retlw	45	;'-'
   215  001B  3420               	retlw	32	;' '
   216  001C  344F               	retlw	79	;'O'
   217  001D  3466               	retlw	102	;'f'
   218  001E  3466               	retlw	102	;'f'
   219  001F  3420               	retlw	32	;' '
   220  0020  340A               	retlw	10
   221  0021  340D               	retlw	13
   222  0022  3400               	retlw	0
   223  0023                     STR_2:
   224  0023  3431               	retlw	49	;'1'
   225  0024  3420               	retlw	32	;' '
   226  0025  342D               	retlw	45	;'-'
   227  0026  3420               	retlw	32	;' '
   228  0027  344F               	retlw	79	;'O'
   229  0028  346E               	retlw	110	;'n'
   230  0029  3420               	retlw	32	;' '
   231  002A  340A               	retlw	10
   232  002B  340D               	retlw	13
   233  002C  3400               	retlw	0
   234  001C                     
   235                           	psect	cinit
   236  07FC                     start_initialization:	
   237                           ; #config settings
   238                           
   239  07FC                     __initialization:
   240  07FC                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  07FC                     __end_of__initialization:
   244  07FC  0183               	clrf	3
   245  07FD  120A  118A  2FB1   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	cstackCOMMON
   248  0070                     __pcstackCOMMON:
   249  0070                     ?_UART_init:
   250  0070                     ??_UART_init:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_UART_read:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??_UART_read:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_UART_write:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_UART_write:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_UART_printf:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_main:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     UART_write@data:	
   272                           ; 1 bytes @ 0x0
   273                           
   274                           
   275                           ; 1 bytes @ 0x0
   276  0070                     	ds	1
   277  0071                     ??_UART_printf:
   278                           
   279                           ; 1 bytes @ 0x1
   280  0071                     	ds	1
   281  0072                     UART_printf@text:
   282                           
   283                           ; 1 bytes @ 0x2
   284  0072                     	ds	1
   285  0073                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x3
   288  0073                     	ds	1
   289  0074                     main@text:
   290                           
   291                           ; 1 bytes @ 0x4
   292  0074                     	ds	1
   293  0075                     main@flag_rx:
   294                           
   295                           ; 1 bytes @ 0x5
   296  0075                     	ds	1
   297                           
   298                           	psect	maintext
   299  07B1                     __pmaintext:	
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 56 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  flag_rx         1    5[COMMON] unsigned char 
   310 ;;  text            1    4[COMMON] PTR unsigned char 
   311 ;;		 -> STR_1(15), 
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : B00/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   321 ;;      Params:         0       0       0       0       0
   322 ;;      Locals:         2       0       0       0       0
   323 ;;      Temps:          1       0       0       0       0
   324 ;;      Totals:         3       0       0       0       0
   325 ;;Total ram usage:        3 bytes
   326 ;; Hardware stack levels required when called: 2
   327 ;; This function calls:
   328 ;;		_UART_init
   329 ;;		_UART_printf
   330 ;;		_UART_read
   331 ;; This function is called by:
   332 ;;		Startup code after reset
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336  07B1                     _main:	
   337                           ;psect for function _main
   338                           
   339  07B1                     l706:	
   340                           ;incstack = 0
   341                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   342                           
   343                           
   344                           ;main.c: 58:     TRISAbits.TRISA4 = 0;
   345  07B1  1683               	bsf	3,5	;RP0=1, select bank1
   346  07B2  1303               	bcf	3,6	;RP1=0, select bank1
   347  07B3  1205               	bcf	5,4	;volatile
   348                           
   349                           ;main.c: 59:     PORTAbits.RA4 = 0;
   350  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   351  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   352  07B6  1205               	bcf	5,4	;volatile
   353  07B7                     l708:
   354                           
   355                           ;main.c: 61:     char flag_rx;;main.c: 63:     UART_init();
   356  07B7  120A  118A  277F  120A  118A  	fcall	_UART_init
   357  07BC                     l710:
   358                           
   359                           ;main.c: 64:     unsigned char* text = "Hello world \n\r";
   360  07BC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   361  07BD  00F3               	movwf	??_main
   362  07BE  0873               	movf	??_main,w
   363  07BF  00F4               	movwf	main@text
   364  07C0                     l712:
   365                           
   366                           ;main.c: 65:     UART_printf(text);
   367  07C0  0874               	movf	main@text,w
   368  07C1  120A  118A  2792  120A  118A  	fcall	_UART_printf
   369  07C6                     l714:
   370                           
   371                           ;main.c: 67:     UART_printf("1 - On \n\r");
   372  07C6  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   373  07C7  120A  118A  2792  120A  118A  	fcall	_UART_printf
   374  07CC                     l716:
   375                           
   376                           ;main.c: 68:     UART_printf("0 - Off \n\r");
   377  07CC  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   378  07CD  120A  118A  2792  120A  118A  	fcall	_UART_printf
   379  07D2                     l718:
   380                           
   381                           ;main.c: 71:         flag_rx = UART_read();
   382  07D2  120A  118A  2769  120A  118A  	fcall	_UART_read
   383  07D7  00F3               	movwf	??_main
   384  07D8  0873               	movf	??_main,w
   385  07D9  00F5               	movwf	main@flag_rx
   386  07DA                     l720:
   387                           
   388                           ;main.c: 72:         if(flag_rx == '1') {
   389  07DA  3031               	movlw	49
   390  07DB  0675               	xorwf	main@flag_rx,w
   391  07DC  1D03               	btfss	3,2
   392  07DD  2FDF               	goto	u71
   393  07DE  2FE0               	goto	u70
   394  07DF                     u71:
   395  07DF  2FE9               	goto	l726
   396  07E0                     u70:
   397  07E0                     l722:
   398                           
   399                           ;main.c: 73:             UART_printf("On \n\r");
   400  07E0  301F               	movlw	(low (((STR_2+4)-__stringbase)| (0+32768)))& (0+255)
   401  07E1  120A  118A  2792  120A  118A  	fcall	_UART_printf
   402  07E6                     l724:
   403                           
   404                           ;main.c: 74:             PORTAbits.RA4 = 1;
   405  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   406  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   407  07E8  1605               	bsf	5,4	;volatile
   408  07E9                     l726:
   409                           
   410                           ;main.c: 77:         if(flag_rx == '0') {
   411  07E9  3030               	movlw	48
   412  07EA  0675               	xorwf	main@flag_rx,w
   413  07EB  1D03               	btfss	3,2
   414  07EC  2FEE               	goto	u81
   415  07ED  2FEF               	goto	u80
   416  07EE                     u81:
   417  07EE  2FD2               	goto	l718
   418  07EF                     u80:
   419  07EF                     l728:
   420                           
   421                           ;main.c: 78:             UART_printf("Off \n\r");
   422  07EF  3014               	movlw	(low (((STR_3+4)-__stringbase)| (0+32768)))& (0+255)
   423  07F0  120A  118A  2792  120A  118A  	fcall	_UART_printf
   424  07F5                     l730:
   425                           
   426                           ;main.c: 79:             PORTAbits.RA4 = 0;
   427  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   428  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   429  07F7  1205               	bcf	5,4	;volatile
   430  07F8  2FD2               	goto	l718
   431  07F9  120A  118A  2800   	ljmp	start
   432  07FC                     __end_of_main:
   433                           
   434                           	psect	text1
   435  0769                     __ptext1:	
   436 ;; *************** function _UART_read *****************
   437 ;; Defined at:
   438 ;;		line 36 in file "main.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      unsigned char 
   445 ;; Registers used:
   446 ;;		wreg
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465  0769                     _UART_read:	
   466                           ;psect for function _UART_read
   467                           
   468  0769                     l652:	
   469                           ;incstack = 0
   470                           ; Regs used in _UART_read: [wreg]
   471                           
   472                           
   473                           ;main.c: 37:     if(PIR1bits.RCIF == 1){
   474  0769  1283               	bcf	3,5	;RP0=0, select bank0
   475  076A  1303               	bcf	3,6	;RP1=0, select bank0
   476  076B  1E8C               	btfss	12,5	;volatile
   477  076C  2F6E               	goto	u21
   478  076D  2F6F               	goto	u20
   479  076E                     u21:
   480  076E  2F71               	goto	l660
   481  076F                     u20:
   482  076F                     l654:
   483                           
   484                           ;main.c: 38:         return RCREG;
   485  076F  081A               	movf	26,w	;volatile
   486  0770  2F72               	goto	l25
   487  0771                     l660:
   488                           
   489                           ;main.c: 40:         return 0;
   490  0771  3000               	movlw	0
   491  0772                     l25:
   492  0772  0008               	return
   493  0773                     __end_of_UART_read:
   494                           
   495                           	psect	text2
   496  0792                     __ptext2:	
   497 ;; *************** function _UART_printf *****************
   498 ;; Defined at:
   499 ;;		line 49 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;  text            1    wreg     PTR unsigned char 
   502 ;;		 -> STR_5(7), STR_4(6), STR_3(11), STR_2(10), 
   503 ;;		 -> STR_1(15), 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  text            1    2[COMMON] PTR unsigned char 
   506 ;;		 -> STR_5(7), STR_4(6), STR_3(11), STR_2(10), 
   507 ;;		 -> STR_1(15), 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         1       0       0       0       0
   519 ;;      Temps:          1       0       0       0       0
   520 ;;      Totals:         2       0       0       0       0
   521 ;;Total ram usage:        2 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; Hardware stack levels required when called: 1
   524 ;; This function calls:
   525 ;;		_UART_write
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531  0792                     _UART_printf:	
   532                           ;psect for function _UART_printf
   533                           
   534                           
   535                           ;incstack = 0
   536                           ; Regs used in _UART_printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   537                           ;UART_printf@text stored from wreg
   538  0792  00F2               	movwf	UART_printf@text
   539  0793                     l698:
   540                           
   541                           ;main.c: 50:     while (*text != 0x00) {
   542  0793  2FA4               	goto	l704
   543  0794                     l700:
   544                           
   545                           ;main.c: 51:         UART_write(*text);
   546  0794  0872               	movf	UART_printf@text,w
   547  0795  0084               	movwf	4
   548  0796  120A  118A  2003  120A  118A  	fcall	stringdir
   549  079B  120A  118A  2773  120A  118A  	fcall	_UART_write
   550  07A0                     l702:
   551                           
   552                           ;main.c: 52:         text++;
   553  07A0  3001               	movlw	1
   554  07A1  00F1               	movwf	??_UART_printf
   555  07A2  0871               	movf	??_UART_printf,w
   556  07A3  07F2               	addwf	UART_printf@text,f
   557  07A4                     l704:
   558                           
   559                           ;main.c: 50:     while (*text != 0x00) {
   560  07A4  0872               	movf	UART_printf@text,w
   561  07A5  0084               	movwf	4
   562  07A6  120A  118A  2003  120A  118A  	fcall	stringdir
   563  07AB  3A00               	xorlw	0
   564  07AC  1D03               	skipz
   565  07AD  2FAF               	goto	u61
   566  07AE  2FB0               	goto	u60
   567  07AF                     u61:
   568  07AF  2F94               	goto	l700
   569  07B0                     u60:
   570  07B0                     l38:
   571  07B0  0008               	return
   572  07B1                     __end_of_UART_printf:
   573                           
   574                           	psect	text3
   575  0773                     __ptext3:	
   576 ;; *************** function _UART_write *****************
   577 ;; Defined at:
   578 ;;		line 44 in file "main.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  data            1    wreg     unsigned char 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  data            1    0[COMMON] unsigned char 
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         1       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         1       0       0       0       0
   596 ;;Total ram usage:        1 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_UART_printf
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605  0773                     _UART_write:	
   606                           ;psect for function _UART_write
   607                           
   608                           
   609                           ;incstack = 0
   610                           ; Regs used in _UART_write: [wreg]
   611                           ;UART_write@data stored from wreg
   612  0773  00F0               	movwf	UART_write@data
   613  0774                     l640:
   614                           
   615                           ;main.c: 45:     TXREG = data;
   616  0774  0870               	movf	UART_write@data,w
   617  0775  1283               	bcf	3,5	;RP0=0, select bank0
   618  0776  1303               	bcf	3,6	;RP1=0, select bank0
   619  0777  0099               	movwf	25	;volatile
   620  0778                     l29:	
   621                           ;main.c: 46:     while (TXSTAbits.TRMT == 0);
   622                           
   623  0778  1683               	bsf	3,5	;RP0=1, select bank1
   624  0779  1303               	bcf	3,6	;RP1=0, select bank1
   625  077A  1C98               	btfss	24,1	;volatile
   626  077B  2F7D               	goto	u11
   627  077C  2F7E               	goto	u10
   628  077D                     u11:
   629  077D  2F78               	goto	l29
   630  077E                     u10:
   631  077E                     l32:
   632  077E  0008               	return
   633  077F                     __end_of_UART_write:
   634                           
   635                           	psect	text4
   636  077F                     __ptext4:	
   637 ;; *************** function _UART_init *****************
   638 ;; Defined at:
   639 ;;		line 24 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666  077F                     _UART_init:	
   667                           ;psect for function _UART_init
   668                           
   669  077F                     l642:	
   670                           ;incstack = 0
   671                           ; Regs used in _UART_init: [wreg]
   672                           
   673                           
   674                           ;main.c: 25:     TRISCbits.TRISC6 = 0;
   675  077F  1683               	bsf	3,5	;RP0=1, select bank1
   676  0780  1303               	bcf	3,6	;RP1=0, select bank1
   677  0781  1307               	bcf	7,6	;volatile
   678                           
   679                           ;main.c: 26:     TRISCbits.TRISC7 = 1;
   680  0782  1787               	bsf	7,7	;volatile
   681                           
   682                           ;main.c: 27:     TXSTAbits.SYNC = 0;
   683  0783  1218               	bcf	24,4	;volatile
   684                           
   685                           ;main.c: 28:     TXSTAbits.TX9 = 0;
   686  0784  1318               	bcf	24,6	;volatile
   687                           
   688                           ;main.c: 29:     TXSTAbits.BRGH = 1;
   689  0785  1518               	bsf	24,2	;volatile
   690  0786                     l644:
   691                           
   692                           ;main.c: 30:     SPBRG = 129;
   693  0786  3081               	movlw	129
   694  0787  0099               	movwf	25	;volatile
   695  0788                     l646:
   696                           
   697                           ;main.c: 31:     RCSTAbits.SPEN = 1;
   698  0788  1283               	bcf	3,5	;RP0=0, select bank0
   699  0789  1303               	bcf	3,6	;RP1=0, select bank0
   700  078A  1798               	bsf	24,7	;volatile
   701  078B                     l648:
   702                           
   703                           ;main.c: 32:     TXSTAbits.TXEN = 1;
   704  078B  1683               	bsf	3,5	;RP0=1, select bank1
   705  078C  1303               	bcf	3,6	;RP1=0, select bank1
   706  078D  1698               	bsf	24,5	;volatile
   707  078E                     l650:
   708                           
   709                           ;main.c: 33:     RCSTAbits.CREN = 1;
   710  078E  1283               	bcf	3,5	;RP0=0, select bank0
   711  078F  1303               	bcf	3,6	;RP1=0, select bank0
   712  0790  1618               	bsf	24,4	;volatile
   713  0791                     l21:
   714  0791  0008               	return
   715  0792                     __end_of_UART_init:
   716  007E                     btemp	set	126	;btemp
   717  007E                     wtemp0	set	126
   718                           
   719                           	psect	config
   720                           
   721                           ;Config register CONFIG @ 0x2007
   722                           ;	Oscillator Selection bits
   723                           ;	FOSC = HS, HS oscillator
   724                           ;	Watchdog Timer Enable bit
   725                           ;	WDTE = OFF, WDT disabled
   726                           ;	Power-up Timer Enable bit
   727                           ;	PWRTE = ON, PWRT enabled
   728                           ;	Brown-out Reset Enable bit
   729                           ;	BOREN = OFF, BOR disabled
   730                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   731                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   732                           ;	Data EEPROM Memory Code Protection bit
   733                           ;	CPD = OFF, Data EEPROM code protection off
   734                           ;	Flash Program Memory Write Enable bits
   735                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   736                           ;	In-Circuit Debugger Mode bit
   737                           ;	DEBUG = 0x1, unprogrammed default
   738                           ;	Flash Program Memory Code Protection bit
   739                           ;	CP = OFF, Code protection off
   740  2007                     	org	8199
   741  2007  3F32               	dw	16178

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main@text	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    UART_printf@text	PTR unsigned char  size(1) Largest target is 15
		 -> STR_5(CODE[7]), STR_4(CODE[6]), STR_3(CODE[11]), STR_2(CODE[10]), 
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_UART_printf
    _UART_printf->_UART_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     293
                                              3 COMMON     3     3      0
                          _UART_init
                        _UART_printf
                          _UART_read
 ---------------------------------------------------------------------------------
 (1) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_printf                                          2     2      0     225
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_printf
     _UART_write
   _UART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Aug 14 00:12:45 2024

                      pc 0002                       l21 0791                       l32 077E  
                     l25 0772                       l29 0778                       l38 07B0  
                     u10 077E                       u11 077D                       u20 076F  
                     u21 076E                       u60 07B0                       u61 07AF  
                     u70 07E0                       u71 07DF                       u80 07EF  
                     u81 07EE                       fsr 0004                      l700 0794  
                    l702 07A0                      l710 07BC                      l640 0774  
                    l704 07A4                      l720 07DA                      l712 07C0  
                    l650 078E                      l642 077F                      l730 07F5  
                    l722 07E0                      l714 07C6                      l706 07B1  
                    l644 0786                      l660 0771                      l652 0769  
                    l724 07E6                      l716 07CC                      l708 07B7  
                    l646 0788                      l654 076F                      l726 07E9  
                    l718 07D2                      l648 078B                      l728 07EF  
                    l698 0793                      fsr0 0004              main@flag_rx 0075  
                   STR_1 0009                     STR_2 0023                     STR_3 0018  
                   STR_4 0027                     STR_5 001C                     _main 07B1  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _RCREG 001A                    _SPBRG 0099                    _TXREG 0019  
            ?_UART_write 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0073        __end_of_UART_init 0792        __end_of_UART_read 0773  
           ?_UART_printf 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07B1             ??_UART_write 0070               __stringtab 0003  
     __end_of_UART_write 077F          UART_printf@text 0072                  __ptext1 0769  
                __ptext2 0792                  __ptext3 0773                  __ptext4 077F  
   end_of_initialization 07FC                _RCSTAbits 0018                _PORTAbits 0005  
              _UART_init 077F                _UART_read 0769                _TRISAbits 0085  
              _TRISCbits 0087                _TXSTAbits 0098               ?_UART_init 0070  
             ?_UART_read 0070      start_initialization 07FC                ___latbits 0002  
              __pstrings 0003              ??_UART_init 0070              ??_UART_read 0070  
               _PIR1bits 000C            ??_UART_printf 0071              __stringbase 0008  
         UART_write@data 0070       __end_of__stringtab 0009      __end_of_UART_printf 07B1  
               main@text 0074                stringcode 0003              _UART_printf 0792  
               stringdir 0003                 stringtab 0003               _UART_write 0773  
