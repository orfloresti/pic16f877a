

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Aug 15 08:40:51 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0019                     _TXREG	set	25
   230  001A                     _RCREG	set	26
   231  000C                     _PIR1bits	set	12
   232  0018                     _RCSTAbits	set	24
   233  0005                     _PORTAbits	set	5
   234  0099                     _SPBRG	set	153
   235  0098                     _TXSTAbits	set	152
   236  0087                     _TRISCbits	set	135
   237  0085                     _TRISAbits	set	133
   238                           
   239                           	psect	strings
   240  0004                     __pstrings:
   241  0004                     stringtab:
   242  0004                     __stringtab:
   243  0004                     stringcode:	
   244                           ;	String table - string pointers are 1 byte each
   245                           
   246  0004                     stringdir:
   247  0004  3000               	movlw	high stringdir
   248  0005  008A               	movwf	10
   249  0006  0804               	movf	4,w
   250  0007  0A84               	incf	4,f
   251  0008  0782               	addwf	2,f
   252  0009                     __stringbase:
   253  0009  3400               	retlw	0
   254  000A                     __end_of__stringtab:
   255  000A                     STR_2:
   256  000A  342A               	retlw	42	;'*'
   257  000B  342A               	retlw	42	;'*'
   258  000C  342A               	retlw	42	;'*'
   259  000D  342A               	retlw	42	;'*'
   260  000E  342A               	retlw	42	;'*'
   261  000F  342A               	retlw	42	;'*'
   262  0010  342A               	retlw	42	;'*'
   263  0011  342A               	retlw	42	;'*'
   264  0012  342A               	retlw	42	;'*'
   265  0013  342A               	retlw	42	;'*'
   266  0014  342A               	retlw	42	;'*'
   267  0015  342A               	retlw	42	;'*'
   268  0016  342A               	retlw	42	;'*'
   269  0017  342A               	retlw	42	;'*'
   270  0018  342A               	retlw	42	;'*'
   271  0019  340A               	retlw	10
   272  001A  340D               	retlw	13
   273  001B  3400               	retlw	0
   274  001C                     STR_1:
   275  001C  3448               	retlw	72	;'H'
   276  001D  3465               	retlw	101	;'e'
   277  001E  346C               	retlw	108	;'l'
   278  001F  346C               	retlw	108	;'l'
   279  0020  346F               	retlw	111	;'o'
   280  0021  3420               	retlw	32	;' '
   281  0022  3477               	retlw	119	;'w'
   282  0023  346F               	retlw	111	;'o'
   283  0024  3472               	retlw	114	;'r'
   284  0025  346C               	retlw	108	;'l'
   285  0026  3464               	retlw	100	;'d'
   286  0027  3420               	retlw	32	;' '
   287  0028  340A               	retlw	10
   288  0029  340D               	retlw	13
   289  002A  3400               	retlw	0
   290  002B                     STR_3:
   291  002B  3430               	retlw	48	;'0'
   292  002C  3420               	retlw	32	;' '
   293  002D  342D               	retlw	45	;'-'
   294  002E  3420               	retlw	32	;' '
   295  002F  344C               	retlw	76	;'L'
   296  0030  3465               	retlw	101	;'e'
   297  0031  3464               	retlw	100	;'d'
   298  0032  3420               	retlw	32	;' '
   299  0033  344F               	retlw	79	;'O'
   300  0034  3466               	retlw	102	;'f'
   301  0035  3466               	retlw	102	;'f'
   302  0036  3420               	retlw	32	;' '
   303  0037  340A               	retlw	10
   304  0038  340D               	retlw	13
   305  0039  3400               	retlw	0
   306  003A                     STR_4:
   307  003A  3431               	retlw	49	;'1'
   308  003B  3420               	retlw	32	;' '
   309  003C  342D               	retlw	45	;'-'
   310  003D  3420               	retlw	32	;' '
   311  003E  344C               	retlw	76	;'L'
   312  003F  3465               	retlw	101	;'e'
   313  0040  3464               	retlw	100	;'d'
   314  0041  3420               	retlw	32	;' '
   315  0042  344F               	retlw	79	;'O'
   316  0043  346E               	retlw	110	;'n'
   317  0044  3420               	retlw	32	;' '
   318  0045  340A               	retlw	10
   319  0046  340D               	retlw	13
   320  0047  3400               	retlw	0
   321  0048                     STR_7:
   322  0048  344C               	retlw	76	;'L'
   323  0049  3445               	retlw	69	;'E'
   324  004A  3444               	retlw	68	;'D'
   325  004B  3420               	retlw	32	;' '
   326  004C  344F               	retlw	79	;'O'
   327  004D  3466               	retlw	102	;'f'
   328  004E  3466               	retlw	102	;'f'
   329  004F  3420               	retlw	32	;' '
   330  0050  340A               	retlw	10
   331  0051  340D               	retlw	13
   332  0052  3400               	retlw	0
   333  0053                     STR_6:
   334  0053  344C               	retlw	76	;'L'
   335  0054  3445               	retlw	69	;'E'
   336  0055  3444               	retlw	68	;'D'
   337  0056  3420               	retlw	32	;' '
   338  0057  344F               	retlw	79	;'O'
   339  0058  346E               	retlw	110	;'n'
   340  0059  3420               	retlw	32	;' '
   341  005A  340A               	retlw	10
   342  005B  340D               	retlw	13
   343  005C  3400               	retlw	0
   344  000A                     
   345                           	psect	cinit
   346  07FC                     start_initialization:	
   347                           ; #config settings
   348                           
   349  07FC                     __initialization:
   350  07FC                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353  07FC                     __end_of__initialization:
   354  07FC  0183               	clrf	3
   355  07FD  120A  118A  2FA5   	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	cstackCOMMON
   358  0071                     __pcstackCOMMON:
   359  0071                     ?_UART_init:
   360  0071                     ??_UART_init:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0071                     ?_UART_printf:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0071                     ?_UART_read:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0071                     ??_UART_read:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0071                     ?_main:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0071                     ?_UART_write:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0071                     ??_UART_write:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0071                     UART_write@data:	
   382                           ; 1 bytes @ 0x0
   383                           
   384                           
   385                           ; 1 bytes @ 0x0
   386  0071                     	ds	1
   387  0072                     ??_UART_printf:
   388                           
   389                           ; 1 bytes @ 0x1
   390  0072                     	ds	1
   391  0073                     UART_printf@text:
   392                           
   393                           ; 1 bytes @ 0x2
   394  0073                     	ds	1
   395  0074                     ??_main:
   396                           
   397                           ; 1 bytes @ 0x3
   398  0074                     	ds	1
   399  0075                     main@text:
   400                           
   401                           ; 1 bytes @ 0x4
   402  0075                     	ds	1
   403  0076                     main@flag_rx:
   404                           
   405                           ; 1 bytes @ 0x5
   406  0076                     	ds	1
   407                           
   408                           	psect	maintext
   409  07A5                     __pmaintext:	
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 25 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  flag_rx         1    5[COMMON] unsigned char 
   420 ;;  text            1    4[COMMON] PTR unsigned char 
   421 ;;		 -> STR_1(15), 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : B00/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   431 ;;      Params:         0       0       0       0       0
   432 ;;      Locals:         2       0       0       0       0
   433 ;;      Temps:          1       0       0       0       0
   434 ;;      Totals:         3       0       0       0       0
   435 ;;Total ram usage:        3 bytes
   436 ;; Hardware stack levels required when called: 2
   437 ;; This function calls:
   438 ;;		_UART_init
   439 ;;		_UART_printf
   440 ;;		_UART_read
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446  07A5                     _main:	
   447                           ;psect for function _main
   448                           
   449  07A5                     l716:	
   450                           ;incstack = 0
   451                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   452                           
   453                           
   454                           ;main.c: 27:     TRISAbits.TRISA4 = 0;
   455  07A5  1683               	bsf	3,5	;RP0=1, select bank1
   456  07A6  1303               	bcf	3,6	;RP1=0, select bank1
   457  07A7  1205               	bcf	5,4	;volatile
   458                           
   459                           ;main.c: 28:     PORTAbits.RA4 = 0;
   460  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   461  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   462  07AA  1205               	bcf	5,4	;volatile
   463  07AB                     l718:
   464                           
   465                           ;main.c: 30:     char flag_rx;;main.c: 32:     UART_init();
   466  07AB  120A  118A  2773  120A  118A  	fcall	_UART_init
   467  07B0                     l720:
   468                           
   469                           ;main.c: 33:     unsigned char* text = "Hello world \n\r";
   470  07B0  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   471  07B1  00F4               	movwf	??_main
   472  07B2  0874               	movf	??_main,w
   473  07B3  00F5               	movwf	main@text
   474  07B4                     l722:
   475                           
   476                           ;main.c: 34:     UART_printf(text);
   477  07B4  0875               	movf	main@text,w
   478  07B5  120A  118A  2786  120A  118A  	fcall	_UART_printf
   479  07BA                     l724:
   480                           
   481                           ;main.c: 35:     UART_printf("***************\n\r");
   482  07BA  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   483  07BB  120A  118A  2786  120A  118A  	fcall	_UART_printf
   484  07C0                     l726:
   485                           
   486                           ;main.c: 36:     UART_printf("0 - Led Off \n\r");
   487  07C0  3022               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   488  07C1  120A  118A  2786  120A  118A  	fcall	_UART_printf
   489  07C6                     l728:
   490                           
   491                           ;main.c: 37:     UART_printf("1 - Led On \n\r");
   492  07C6  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   493  07C7  120A  118A  2786  120A  118A  	fcall	_UART_printf
   494  07CC                     l730:
   495                           
   496                           ;main.c: 38:     UART_printf("***************\n\r");
   497  07CC  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   498  07CD  120A  118A  2786  120A  118A  	fcall	_UART_printf
   499  07D2                     l732:
   500                           
   501                           ;main.c: 41:         flag_rx = UART_read();
   502  07D2  120A  118A  275D  120A  118A  	fcall	_UART_read
   503  07D7  00F4               	movwf	??_main
   504  07D8  0874               	movf	??_main,w
   505  07D9  00F6               	movwf	main@flag_rx
   506  07DA                     l734:
   507                           
   508                           ;main.c: 42:         if(flag_rx == '1') {
   509  07DA  3031               	movlw	49
   510  07DB  0676               	xorwf	main@flag_rx,w
   511  07DC  1D03               	btfss	3,2
   512  07DD  2FDF               	goto	u71
   513  07DE  2FE0               	goto	u70
   514  07DF                     u71:
   515  07DF  2FE9               	goto	l740
   516  07E0                     u70:
   517  07E0                     l736:
   518                           
   519                           ;main.c: 43:             UART_printf("LED On \n\r");
   520  07E0  304A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   521  07E1  120A  118A  2786  120A  118A  	fcall	_UART_printf
   522  07E6                     l738:
   523                           
   524                           ;main.c: 44:             PORTAbits.RA4 = 1;
   525  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   526  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   527  07E8  1605               	bsf	5,4	;volatile
   528  07E9                     l740:
   529                           
   530                           ;main.c: 47:         if(flag_rx == '0') {
   531  07E9  3030               	movlw	48
   532  07EA  0676               	xorwf	main@flag_rx,w
   533  07EB  1D03               	btfss	3,2
   534  07EC  2FEE               	goto	u81
   535  07ED  2FEF               	goto	u80
   536  07EE                     u81:
   537  07EE  2FD2               	goto	l732
   538  07EF                     u80:
   539  07EF                     l742:
   540                           
   541                           ;main.c: 48:             UART_printf("LED Off \n\r");
   542  07EF  303F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   543  07F0  120A  118A  2786  120A  118A  	fcall	_UART_printf
   544  07F5                     l744:
   545                           
   546                           ;main.c: 49:             PORTAbits.RA4 = 0;
   547  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   548  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   549  07F7  1205               	bcf	5,4	;volatile
   550  07F8  2FD2               	goto	l732
   551  07F9  120A  118A  2801   	ljmp	start
   552  07FC                     __end_of_main:
   553                           
   554                           	psect	text1
   555  075D                     __ptext1:	
   556 ;; *************** function _UART_read *****************
   557 ;; Defined at:
   558 ;;		line 16 in file "libs/uart/uart.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      unsigned char 
   565 ;; Registers used:
   566 ;;		wreg
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585  075D                     _UART_read:	
   586                           ;psect for function _UART_read
   587                           
   588  075D                     l666:	
   589                           ;incstack = 0
   590                           ; Regs used in _UART_read: [wreg]
   591                           
   592                           
   593                           ;libs/uart/uart.c: 17:     if (PIR1bits.RCIF == 1) {
   594  075D  1283               	bcf	3,5	;RP0=0, select bank0
   595  075E  1303               	bcf	3,6	;RP1=0, select bank0
   596  075F  1E8C               	btfss	12,5	;volatile
   597  0760  2F62               	goto	u31
   598  0761  2F63               	goto	u30
   599  0762                     u31:
   600  0762  2F65               	goto	l674
   601  0763                     u30:
   602  0763                     l668:
   603                           
   604                           ;libs/uart/uart.c: 18:         return RCREG;
   605  0763  081A               	movf	26,w	;volatile
   606  0764  2F66               	goto	l41
   607  0765                     l674:
   608                           
   609                           ;libs/uart/uart.c: 20:         return 0;
   610  0765  3000               	movlw	0
   611  0766                     l41:
   612  0766  0008               	return
   613  0767                     __end_of_UART_read:
   614                           
   615                           	psect	text2
   616  0786                     __ptext2:	
   617 ;; *************** function _UART_printf *****************
   618 ;; Defined at:
   619 ;;		line 29 in file "libs/uart/uart.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  text            1    wreg     PTR unsigned char 
   622 ;;		 -> STR_7(11), STR_6(10), STR_5(18), STR_4(14), 
   623 ;;		 -> STR_3(15), STR_2(18), STR_1(15), 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  text            1    2[COMMON] PTR unsigned char 
   626 ;;		 -> STR_7(11), STR_6(10), STR_5(18), STR_4(14), 
   627 ;;		 -> STR_3(15), STR_2(18), STR_1(15), 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         0       0       0       0       0
   638 ;;      Locals:         1       0       0       0       0
   639 ;;      Temps:          1       0       0       0       0
   640 ;;      Totals:         2       0       0       0       0
   641 ;;Total ram usage:        2 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 1
   644 ;; This function calls:
   645 ;;		_UART_write
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651  0786                     _UART_printf:	
   652                           ;psect for function _UART_printf
   653                           
   654                           
   655                           ;incstack = 0
   656                           ; Regs used in _UART_printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   657                           ;UART_printf@text stored from wreg
   658  0786  00F3               	movwf	UART_printf@text
   659  0787                     l708:
   660                           
   661                           ;libs/uart/uart.c: 30:     while (*text != 0x00) {
   662  0787  2F98               	goto	l714
   663  0788                     l710:
   664                           
   665                           ;libs/uart/uart.c: 31:         UART_write(*text);
   666  0788  0873               	movf	UART_printf@text,w
   667  0789  0084               	movwf	4
   668  078A  120A  118A  2004  120A  118A  	fcall	stringdir
   669  078F  120A  118A  2767  120A  118A  	fcall	_UART_write
   670  0794                     l712:
   671                           
   672                           ;libs/uart/uart.c: 32:         text++;
   673  0794  3001               	movlw	1
   674  0795  00F2               	movwf	??_UART_printf
   675  0796  0872               	movf	??_UART_printf,w
   676  0797  07F3               	addwf	UART_printf@text,f
   677  0798                     l714:
   678                           
   679                           ;libs/uart/uart.c: 30:     while (*text != 0x00) {
   680  0798  0873               	movf	UART_printf@text,w
   681  0799  0084               	movwf	4
   682  079A  120A  118A  2004  120A  118A  	fcall	stringdir
   683  079F  3A00               	xorlw	0
   684  07A0  1D03               	skipz
   685  07A1  2FA3               	goto	u61
   686  07A2  2FA4               	goto	u60
   687  07A3                     u61:
   688  07A3  2F88               	goto	l710
   689  07A4                     u60:
   690  07A4                     l54:
   691  07A4  0008               	return
   692  07A5                     __end_of_UART_printf:
   693                           
   694                           	psect	text3
   695  0767                     __ptext3:	
   696 ;; *************** function _UART_write *****************
   697 ;; Defined at:
   698 ;;		line 24 in file "libs/uart/uart.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  data            1    wreg     unsigned char 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  data            1    0[COMMON] unsigned char 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   712 ;;      Params:         0       0       0       0       0
   713 ;;      Locals:         1       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0
   715 ;;      Totals:         1       0       0       0       0
   716 ;;Total ram usage:        1 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_UART_printf
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725  0767                     _UART_write:	
   726                           ;psect for function _UART_write
   727                           
   728                           
   729                           ;incstack = 0
   730                           ; Regs used in _UART_write: [wreg]
   731                           ;UART_write@data stored from wreg
   732  0767  00F1               	movwf	UART_write@data
   733  0768                     l646:
   734                           
   735                           ;libs/uart/uart.c: 25:     TXREG = data;
   736  0768  0871               	movf	UART_write@data,w
   737  0769  1283               	bcf	3,5	;RP0=0, select bank0
   738  076A  1303               	bcf	3,6	;RP1=0, select bank0
   739  076B  0099               	movwf	25	;volatile
   740  076C                     l45:	
   741                           ;libs/uart/uart.c: 26:     while (TXSTAbits.TRMT == 0);
   742                           
   743  076C  1683               	bsf	3,5	;RP0=1, select bank1
   744  076D  1303               	bcf	3,6	;RP1=0, select bank1
   745  076E  1C98               	btfss	24,1	;volatile
   746  076F  2F71               	goto	u11
   747  0770  2F72               	goto	u10
   748  0771                     u11:
   749  0771  2F6C               	goto	l45
   750  0772                     u10:
   751  0772                     l48:
   752  0772  0008               	return
   753  0773                     __end_of_UART_write:
   754                           
   755                           	psect	text4
   756  0773                     __ptext4:	
   757 ;; *************** function _UART_init *****************
   758 ;; Defined at:
   759 ;;		line 4 in file "libs/uart/uart.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786  0773                     _UART_init:	
   787                           ;psect for function _UART_init
   788                           
   789  0773                     l648:	
   790                           ;incstack = 0
   791                           ; Regs used in _UART_init: [wreg]
   792                           
   793                           
   794                           ;libs/uart/uart.c: 5:     TRISCbits.TRISC6 = 0;
   795  0773  1683               	bsf	3,5	;RP0=1, select bank1
   796  0774  1303               	bcf	3,6	;RP1=0, select bank1
   797  0775  1307               	bcf	7,6	;volatile
   798                           
   799                           ;libs/uart/uart.c: 6:     TRISCbits.TRISC7 = 1;
   800  0776  1787               	bsf	7,7	;volatile
   801                           
   802                           ;libs/uart/uart.c: 7:     TXSTAbits.SYNC = 0;
   803  0777  1218               	bcf	24,4	;volatile
   804                           
   805                           ;libs/uart/uart.c: 8:     TXSTAbits.TX9 = 0;
   806  0778  1318               	bcf	24,6	;volatile
   807                           
   808                           ;libs/uart/uart.c: 9:     TXSTAbits.BRGH = 1;
   809  0779  1518               	bsf	24,2	;volatile
   810  077A                     l650:
   811                           
   812                           ;libs/uart/uart.c: 10:     SPBRG = 129;
   813  077A  3081               	movlw	129
   814  077B  0099               	movwf	25	;volatile
   815  077C                     l652:
   816                           
   817                           ;libs/uart/uart.c: 11:     RCSTAbits.SPEN = 1;
   818  077C  1283               	bcf	3,5	;RP0=0, select bank0
   819  077D  1303               	bcf	3,6	;RP1=0, select bank0
   820  077E  1798               	bsf	24,7	;volatile
   821  077F                     l654:
   822                           
   823                           ;libs/uart/uart.c: 12:     TXSTAbits.TXEN = 1;
   824  077F  1683               	bsf	3,5	;RP0=1, select bank1
   825  0780  1303               	bcf	3,6	;RP1=0, select bank1
   826  0781  1698               	bsf	24,5	;volatile
   827  0782                     l656:
   828                           
   829                           ;libs/uart/uart.c: 13:     RCSTAbits.CREN = 1;
   830  0782  1283               	bcf	3,5	;RP0=0, select bank0
   831  0783  1303               	bcf	3,6	;RP1=0, select bank0
   832  0784  1618               	bsf	24,4	;volatile
   833  0785                     l37:
   834  0785  0008               	return
   835  0786                     __end_of_UART_init:
   836  007E                     btemp	set	126	;btemp
   837  007E                     wtemp0	set	126
   838                           
   839                           	psect	config
   840                           
   841                           ;Config register CONFIG @ 0x2007
   842                           ;	Oscillator Selection bits
   843                           ;	FOSC = HS, HS oscillator
   844                           ;	Watchdog Timer Enable bit
   845                           ;	WDTE = OFF, WDT disabled
   846                           ;	Power-up Timer Enable bit
   847                           ;	PWRTE = ON, PWRT enabled
   848                           ;	Brown-out Reset Enable bit
   849                           ;	BOREN = OFF, BOR disabled
   850                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   851                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   852                           ;	Data EEPROM Memory Code Protection bit
   853                           ;	CPD = OFF, Data EEPROM code protection off
   854                           ;	Flash Program Memory Write Enable bits
   855                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   856                           ;	In-Circuit Debugger Mode bit
   857                           ;	DEBUG = 0x1, unprogrammed default
   858                           ;	Flash Program Memory Code Protection bit
   859                           ;	CP = OFF, Code protection off
   860  2007                     	org	8199
   861  2007  3F32               	dw	16178

Data Sizes:
    Strings     83
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_printf@text	PTR unsigned char  size(1) Largest target is 18
		 -> STR_7(CODE[11]), STR_6(CODE[10]), STR_5(CODE[18]), STR_4(CODE[14]), 
		 -> STR_3(CODE[15]), STR_2(CODE[18]), STR_1(CODE[15]), 

    main@text	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_UART_printf
    _UART_printf->_UART_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     359
                                              3 COMMON     3     3      0
                          _UART_init
                        _UART_printf
                          _UART_read
 ---------------------------------------------------------------------------------
 (1) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_printf                                          2     2      0     291
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_printf
     _UART_write
   _UART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      6       6       1       46.2%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Aug 15 08:40:51 2024

                      pc 0002                       l41 0766                       l37 0785  
                     l45 076C                       l54 07A4                       l48 0772  
                     u10 0772                       u11 0771                       u30 0763  
                     u31 0762                       u60 07A4                       u61 07A3  
                     u70 07E0                       u71 07DF                       u80 07EF  
                     u81 07EE                       fsr 0004                      l710 0788  
                    l712 0794                      l720 07B0                      l650 077A  
                    l714 0798                      l730 07CC                      l722 07B4  
                    l652 077C                      l708 0787                      l740 07E9  
                    l732 07D2                      l724 07BA                      l716 07A5  
                    l654 077F                      l646 0768                      l742 07EF  
                    l734 07DA                      l726 07C0                      l718 07AB  
                    l656 0782                      l648 0773                      l744 07F5  
                    l736 07E0                      l728 07C6                      l674 0765  
                    l666 075D                      l738 07E6                      l668 0763  
                    fsr0 0004              main@flag_rx 0076                     STR_1 001C  
                   STR_2 000A                     STR_3 002B                     STR_4 003A  
                   STR_5 000A                     STR_6 0053                     STR_7 0048  
                   _main 07A5                     btemp 007E                     start 0001  
                  ?_main 0071                    _RCREG 001A                    _SPBRG 0099  
                  _TXREG 0019              ?_UART_write 0071                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074        __end_of_UART_init 0786  
      __end_of_UART_read 0767             ?_UART_printf 0071  __end_of__initialization 07FC  
         __pcstackCOMMON 0071               __pmaintext 07A5             ??_UART_write 0071  
             __stringtab 0004       __end_of_UART_write 0773          UART_printf@text 0073  
                __ptext1 075D                  __ptext2 0786                  __ptext3 0767  
                __ptext4 0773     end_of_initialization 07FC                _RCSTAbits 0018  
              _PORTAbits 0005                _UART_init 0773                _UART_read 075D  
              _TRISAbits 0085                _TRISCbits 0087                _TXSTAbits 0098  
             ?_UART_init 0071               ?_UART_read 0071      start_initialization 07FC  
              ___latbits 0002                __pstrings 0004              ??_UART_init 0071  
            ??_UART_read 0071                 _PIR1bits 000C            ??_UART_printf 0072  
            __stringbase 0009           UART_write@data 0071       __end_of__stringtab 000A  
    __end_of_UART_printf 07A5                 main@text 0075                stringcode 0004  
            _UART_printf 0786                 stringdir 0004                 stringtab 0004  
             _UART_write 0767  
